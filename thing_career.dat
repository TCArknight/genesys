<?xml version="1.0" encoding="UTF-8"?>
<document signature="Hero Lab Data">
  <thing id="caEntertainer" name="Entertainer" description="For the Entertainer, the whole world really is a stage. Whatever their chosen medium, these artists, actors, and musicians make their living brightening the days of others. However, there can be a lot more to these individuals than meets the eye, as some Entertainers use their acting skills to cover more serious agendas.\n\nThe Entertainer counts the following skills as career skills: {b}Charm{/b}, {b}Coordination{/b}, {b}Deception{/b}, {b}Discipline{/b}, {b}Leadership{/b}, {b}Melee{/b}, {b}Skulduggery{/b}, and {b}Stealth{/b}. Before spending experience during character creation, an Entertainer may choose four of their career skills and gain one rank in each of them." compset="Career" uniqueness="unique">
    <fieldval field="caSkillChoices" value="4"/>
    <eval phase="Initialize" priority="1100">~Assign SkillType.CareerSkill tag to career skills
      perform hero.child[skCharm].assign[SkillType.CareerSkill]
      perform hero.child[skCoord].assign[SkillType.CareerSkill]
      perform hero.child[skDeception].assign[SkillType.CareerSkill]
      perform hero.child[skDiscipline].assign[SkillType.CareerSkill]
      perform hero.child[skLeader].assign[SkillType.CareerSkill]
      perform hero.child[skSkull].assign[SkillType.CareerSkill]
      perform hero.child[skStealth].assign[SkillType.CareerSkill]
	  
      perform hero.child[skCharm].assign[SkillType.CareerSelect]
      perform hero.child[skCoord].assign[SkillType.CareerSelect]
      perform hero.child[skDeception].assign[SkillType.CareerSelect]
      perform hero.child[skDiscipline].assign[SkillType.CareerSelect]
      perform hero.child[skLeader].assign[SkillType.CareerSelect]
      perform hero.child[skSkull].assign[SkillType.CareerSelect]
      perform hero.child[skStealth].assign[SkillType.CareerSelect]

if (#issplitmelee[] = 0) then
  perform hero.child[skMelee].assign[SkillType.CareerSkill]
  perform hero.child[skMelee].assign[SkillType.CareerSelect]
else
  perform hero.child[skMeleeLight].assign[SkillType.CareerSkill]
  perform hero.child[skMeleeLight].assign[SkillType.CareerSelect]
  endif</eval>
    </thing>
  <thing id="caExplorer" name="Explorer" description="The Explorer is at home in the wild, able to handle anything the wilderness throws at them. Explorers tend to excel at surviving in the wilderness, and they often are pretty good with ranged weapons. Explorers may be military scouts, gruff and unsociable hunters, or people who just prefer living in the wild.\n\nThe Explorer counts the following skills as career skills: {b}Athletics{/b}, {b}Brawl{/b}, {b}Coordination{/b}, {b}Deception{/b}, {b}Perception{/b}, {b}Ranged{/b}, {b}Stealth{/b}, and {b}Survival{/b}. Before spending experience during character creation, an Explorer may choose four of their career skills and gain one rank in each of them." compset="Career" uniqueness="unique">
    <fieldval field="caSkillChoices" value="4"/>
    <eval phase="Initialize" priority="1100">~Assign SkillType.CareerSkill tag to career skills
      perform hero.child[skAthlet].assign[SkillType.CareerSkill]
      perform hero.child[skBrawl].assign[SkillType.CareerSkill]
      perform hero.child[skCoord].assign[SkillType.CareerSkill]
      perform hero.child[skDeception].assign[SkillType.CareerSkill]
      perform hero.child[skPercept].assign[SkillType.CareerSkill]
      perform hero.child[skStealth].assign[SkillType.CareerSkill]
      perform hero.child[skSurviv].assign[SkillType.CareerSkill]

      perform hero.child[skAthlet].assign[SkillType.CareerSelect]
      perform hero.child[skBrawl].assign[SkillType.CareerSelect]
      perform hero.child[skCoord].assign[SkillType.CareerSelect]
      perform hero.child[skDeception].assign[SkillType.CareerSelect]
      perform hero.child[skPercept].assign[SkillType.CareerSelect]
      perform hero.child[skStealth].assign[SkillType.CareerSelect]
      perform hero.child[skSurviv].assign[SkillType.CareerSelect]

if (#issplitranged[] = 0) then
  perform hero.child[skRanged].assign[SkillType.CareerSkill]
  perform hero.child[skRanged].assign[SkillType.CareerSelect]
else
  perform hero.child[skRangedHeavy].assign[SkillType.CareerSkill]
  perform hero.child[skRangedHeavy].assign[SkillType.CareerSelect]
  endif</eval>
    </thing>
  <thing id="caWizard" name="Wizard" description="Magic can be brought into nearly any setting, and the Wizard is the career that really specializes in it. The Wizard focuses on the arcane: magic as a discipline that can be learned through study and practice. Rituals, cantrips, and chanted spells are all means by which the Wizard channels arcane energies. \n\nThe Wizard counts the following skills as career skills: {b}Alchemy{/b}, {b}Arcana{/b}, {b}Coercion{/b}, {b}Discipline{/b}, {b}Knowledge{/b}, {b}Leadership{/b}, {b}Skulduggery{/b}, and {b}Vigilance{/b}. Before spending experience during character creation, a Wizard may choose four of their career skills and gain one rank in each of them." compset="Career" uniqueness="unique">
    <fieldval field="caSkillChoices" value="4"/>
    <usesource source="Fantasy"/>
    <eval phase="Initialize" priority="1100">
	  ~Assign SkillType.CareerSkill tag to career skills
      perform hero.child[skAlchemy].assign[SkillType.CareerSkill]
      perform hero.child[skArcana].assign[SkillType.CareerSkill]
      perform hero.child[skCoerce].assign[SkillType.CareerSkill]
      perform hero.child[skDiscipline].assign[SkillType.CareerSkill]
      perform hero.child[skKnowledge].assign[SkillType.CareerSkill]
      perform hero.child[skLeader].assign[SkillType.CareerSkill]
      perform hero.child[skSkull].assign[SkillType.CareerSkill]
      perform hero.child[skVigil].assign[SkillType.CareerSkill]

      perform hero.child[skAlchemy].assign[SkillType.CareerSelect]
      perform hero.child[skArcana].assign[SkillType.CareerSelect]
      perform hero.child[skCoerce].assign[SkillType.CareerSelect]
      perform hero.child[skDiscipline].assign[SkillType.CareerSelect]
      perform hero.child[skKnowledge].assign[SkillType.CareerSelect]
      perform hero.child[skLeader].assign[SkillType.CareerSelect]
      perform hero.child[skSkull].assign[SkillType.CareerSelect]
      perform hero.child[skVigil].assign[SkillType.CareerSelect]
	  </eval>
    </thing>
  </document>
